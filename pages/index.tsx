import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { v4 as uuidv4 } from "uuid";
import Link from "next/link";
import { SetStateAction, useEffect, useState } from "react";

export default function Home() {
  const [todo, setTodo] = useState("");
  const [sortedTodos, setSortedTodos] = useState<Todo[]>([]);

  type Todo = {
    inputText: string;
    id: string;
    checked: boolean;
    edit: boolean;
  };

  const handleInputTodo = (e: {
    target: { value: SetStateAction<string> };
  }) => {
    setTodo(e.target.value);
  };

  const handleFormSubmit = (e: { preventDefault: () => void }) => {
    e.preventDefault();
    setSortedTodos([
      { id: uuidv4(), inputText: todo.trim(), edit: false, checked: false },
      ...sortedTodos,
    ]);
    setTodo("");
    console.log(sortedTodos);
  };

  const handleDeleteTodo = (id: string) => {
    const newTodos = sortedTodos.filter((todo) => {
      if (todo.id !== id) {
        return todo;
      }
    });
    setSortedTodos(newTodos);
  };

  const handleOnCheck = (id: string, checked: boolean) => {
    const newTodos = sortedTodos.map((todo) => {
      if (todo.id === id) {
        todo.checked = !checked;
      }
      return todo;
    });

    setSortedTodos(newTodos);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>TODOリスト</h1>
        <form onSubmit={handleFormSubmit}>
          <input
            type="text"
            value={todo}
            name="todo"
            onChange={handleInputTodo}
          ></input>
          <button type="submit">タスク追加</button>
        </form>

        <ul style={{ listStyle: "none" }}>
          {sortedTodos.map((todo) => {
            return (
              <li key={todo.id}>
                {todo.inputText}
                <button
                  onClick={() => {
                    handleDeleteTodo(todo.id);
                  }}
                >
                  削除
                </button>
                <input
                  type="checkbox"
                  checked={todo.checked}
                  onChange={() => {
                    handleOnCheck(todo.id, todo.checked);
                  }}
                ></input>
              </li>
            );
          })}
        </ul>

        <div>
          <button>
            <Link href="/completeTodo">完了したタスク一覧</Link>
          </button>
          <button>
            <Link href="/notCompleteTodo">未完了のタスク一覧</Link>
          </button>
        </div>
      </main>
    </div>
  );
}
